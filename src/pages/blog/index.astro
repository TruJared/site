---
import { getCollection } from "astro:content";
import SelectableTag from "@components/SelectableTag.astro";
import Layout from "@layout/Layout.astro";

import readingTime from "reading-time";
import BlogPost from "@components/BlogPost.astro";

let allPosts = await getCollection("posts");
// sort by date
allPosts = allPosts.sort((a, b) => {
  let dateA = new Date(a.data.pubDate),
    dateB = new Date(b.data.pubDate);
  if (dateA < dateB) return 1;
  if (dateA > dateB) return -1;
  return 0;
});

const tags = [
  ...new Set(
    allPosts
      .map((post) => post.data.tags)
      .flat()
      .sort()
  ),
];
---

<Layout
  pageTitle="Jared Writes"
  description="  A collection of my random jibbers and jabbers and hootenannies. You can use the tags below to filter the posts. "
  type="article"
>
  <main class="px-8 pt-16 mx-auto max-w-6xl sm:pt-24 lg:px-16">
    <div class="flex flex-col mt-4 space-y-8">
      <div class="flex flex-col space-y-4">
        <h1
          class="text-4xl font-bold tracking-tighter sm:text-5xl max-w-[25ch]"
        >
          Jared Writes
        </h1>
        <p class="text-primary-300 max-w-[65ch]">
          A collection of my random jibbers and jabbers and hootenannies. You can use the tags below to filter the posts.
        </p>
        <h2
          class="text-3xl font-bold tracking-tighter sm:text-4xl max-w-[25ch]"
        >
          Filter by tags:
        </h2>
      </div>
      <div class="mb-8">
        <ul class="flex flex-row flex-wrap gap-2">
          {tags.map((t) => <SelectableTag name={t} />)}
        </ul>
      </div>
      <div class="flex flex-col gap-8">
        {
          allPosts.map((p) => (
            <BlogPost
              date={new Date(p.data.pubDate).toLocaleDateString("en-US", {
                month: "long",
                day: "numeric",
                year: "numeric",
              })}
              readTime={readingTime(p.body).text}
              title={p.data.title}
              description={p.data.description}
              tags={p.data.tags}
              url={"/posts/" + p.slug}
            />
          ))
        }
      </div>
    </div>
  </main>
</Layout>

<script define:vars={{ tags }}>
  let blogPosts = document.querySelectorAll("div[data-tags]");
  let filters = document.querySelectorAll("input");

  let tagMap = Object.assign(...tags.map((t) => ({ [t]: false })));

  for (const filter of filters) {
    filter.addEventListener("change", (e) => {
      let isChecked = e.target.checked;
      let name = filter.name;
      tagMap[name] = isChecked;

      toggleVisibility();
    });
  }

  function toggleVisibility() {
    let checkedTags = Object.keys(tagMap).filter((t) => tagMap[t] === true);

    for (const blogPost of blogPosts) {
      let tags = blogPost.dataset.tags.split(",");

      if (checkedTags.every((t) => tags.includes(t))) {
        blogPost.style.display = "block";
      } else {
        blogPost.style.display = "none";
      }
    }
  }
</script>
